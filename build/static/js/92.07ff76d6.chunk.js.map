{"version":3,"sources":["views/detailTable/ProductDetails.js","layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","constants/creationdatetime.js"],"names":["ProductDetails","navigate","useNavigate","useState","title","productDetails","setProductDetails","insertProductData","ProductCode","ItemCode","product_code","item_code","creation_date","creationdatetime","api","post","then","res","insertedDataId","data","insertId","message","type","res1","InventoryCode","product_id","inventory_code","catch","setTimeout","useEffect","md","className","onChange","e","target","name","value","color","onClick","response","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","active","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","created_by","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","formattedDatetime","moment","format","console","log"],"mappings":"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","file":"static/js/92.07ff76d6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\n\r\nconst ProductDetails = () => {\r\n  //All const variables\r\n  const navigate = useNavigate();\r\n  const [productDetails, setProductDetails] = useState({\r\n    title: '',\r\n  });\r\n  //setting data in ProductDetails\r\n  const handleInputs = (e) => {\r\n    setProductDetails({ ...productDetails, [e.target.name]: e.target.value });\r\n  };\r\n  //Insert Product Data\r\n  const insertProductData = (ProductCode, ItemCode) => {\r\n    if (productDetails.title !== '') {\r\n      productDetails.product_code = ProductCode;\r\n      productDetails.item_code = ItemCode;\r\n      productDetails.creation_date = creationdatetime;\r\n      api\r\n        .post('/product/insertProduct', productDetails)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          message('Product inserted successfully.', 'success');\r\n          api\r\n          .post('/product/getCodeValue', { type: 'InventoryCode' })\r\n            .then((res1) => {\r\n              const InventoryCode = res1.data.data;\r\n              message('inventory created successfully.', 'success');\r\n              api\r\n              .post('/inventory/insertinventory', { product_id: insertedDataId, inventory_code:InventoryCode  })\r\n            \r\n            .then(() => {\r\n              message('inventory created successfully.', 'success');\r\n            })\r\n            })\r\n            .catch(() => {\r\n              message('Unable to create inventory.', 'error');\r\n            });\r\n          setTimeout(() => {\r\n            navigate(`/ProductEdit/${insertedDataId}`);\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields.', 'warning');\r\n    }\r\n  };\r\n\r\n\r\n  //Auto generation code\r\n  const generateCode = () => {\r\n    api\r\n      .post('/product/getCodeValue', { type: 'ProductCode' })\r\n      .then((res) => {\r\n        const ProductCode = res.data.data\r\n      api\r\n      .post('/product/getCodeValue', { type: 'ItemCode' })\r\n      .then((response) => {\r\n        const ItemCode = response.data.data\r\n        insertProductData(ProductCode, ItemCode);\r\n      })\r\n      })\r\n      .catch(() => {\r\n        insertProductData('');\r\n      });\r\n  };\r\n\r\n  //useeffect\r\n  useEffect(() => {\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n      <Row>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Key Details\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>Product Name <span className=\"required\"> *</span> </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={handleInputs}\r\n                      value={ProductDetails && ProductDetails.title}\r\n                      name=\"title\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        generateCode();\r\n                      }}\r\n                    >\r\n                      Save & Continue\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        navigate('/Product');\r\n                      }}\r\n                      type=\"button\"\r\n                      className=\"btn btn-dark shadow-none\"\r\n                    >\r\n                      Go to List\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductDetails;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle, creationModificationDate }) => {\r\n  return (\r\n    <Card className=\"shadow-none\">\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate: PropTypes.any,\r\n};\r\n\r\nexport default ComponentCard;\r\n","import moment from \"moment\";\r\n\r\n// Get the current datetime in 'DD-MM-YYYY h:mm:ss a' format\r\nconst formattedDatetime = moment().format('DD-MM-YYYY h:mm:ss a');\r\n\r\n// Parse the datetime value to the MySQL datetime format 'YYYY-MM-DD HH:mm:ss'\r\nconst creationdatetime = moment(formattedDatetime, 'DD-MM-YYYY h:mm:ss a').format('DD-MM-YYYY HH:mm:ss');\r\n\r\nconsole.log(creationdatetime); // Output: \"2023-07-24 12:44:43\"\r\n\r\nexport default creationdatetime"],"sourceRoot":""}